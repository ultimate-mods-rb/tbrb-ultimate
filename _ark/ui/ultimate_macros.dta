#ifndef HX_WII
#define INIT_DTA_READER
(
   {foreach $entry {read_file $ulti_settings_path}
      {if {== {elem $entry 0} {basename gameplay_settings}}
         {if {find $entry song_speed}
            {set $speedmod
               {elem {find $entry song_speed} 1}
            }
         }
         {if {find $entry whammy_pitch_bending}
            {set $whammypb
               {elem {find $entry whammy_pitch_bending} 1}
            }
         }
         {if {find $entry disable_miss_sounds}
            {set $nomisounds
               {elem {find $entry disable_miss_sounds} 1}
            }
         }
         {if {find $entry pad_is_guitar}
            {set $padtar
               {elem {find $entry pad_is_guitar} 1}
            }
         }
         {if {find $entry pad_is_drum}
            {set $paddrum
               {elem {find $entry pad_is_drum} 1}
            }
         }
         {if {find $entry second_kick_mapping}
            {set $secondkick
               {elem {find $entry second_kick_mapping} 1}
            }
         }
         {if {find $entry mic_gain}
            {set $mic_gain_1
               {elem {elem {find $entry mic_gain} 1} 0}
            }
            {set $mic_gain_2
               {elem {elem {find $entry mic_gain} 1} 1}
            }
            {set $mic_gain_3
               {elem {elem {find $entry mic_gain} 1} 2}
            }
         }
         {if {find $entry default_difficulties}
            {set $default_diff0
               {elem {elem {find $entry default_difficulties} 1} 0}
            }
            {set $default_diff1
               {elem {elem {find $entry default_difficulties} 1} 1}
            }
            {set $default_diff2
               {elem {elem {find $entry default_difficulties} 1} 2}
            }
            {set $default_diff3
               {elem {elem {find $entry default_difficulties} 1} 3}
            }
         }
      }
      {if {== {elem $entry 0} {basename graphics_settings}}
         {if {find $entry disable_all_post_fx}
            {set $postfx
               {elem {find $entry disable_all_post_fx} 1}
            }
         }
         {if {find $entry black_bg}
            {set $blackbg
               {elem {find $entry black_bg} 1}
            }
         }
         {if {find $entry camera_shake}
            {set $camerashake
               {elem {find $entry camera_shake} 1}
            }
         }
         {if {find $entry bloom}
            {set $scrbloom
               {elem {find $entry bloom} 1}
            }
         }
         {if {find $entry depth_of_field}
            {set $fxdof
               {elem {find $entry depth_of_field} 1}
            }
         }
         {if {find $entry film_grain}
            {set $scrnoise
               {elem {find $entry film_grain} 1}
            }
         }
         {if {find $entry motion_blur}
            {set $mbblend
               {elem {find $entry motion_blur} 1}
            }
         }
         {if {find $entry force_high_lod}
            {set $forcelod0
               {elem {find $entry force_high_lod} 1}
            }
         }
         {if {find $entry venue_fps}
            {set $emulatefps
               {elem {find $entry venue_fps} 1}
            }
         }
         {if {find $entry vsync_rate}
            {set $vsyncrate
               {elem {find $entry vsync_rate} 1}
            }
         }
      }
      {if {== {elem $entry 0} {basename track_settings}}
         {if {find $entry track_speed}
            {set $trackspeed
               {elem {find $entry track_speed} 1}
            }
         }
         {if {find $entry sync_difficulty_speeds}
            {set $syncdifspeeds
               {elem {find $entry sync_difficulty_speeds} 1}
            }
         }
         {if {find $entry legacy_bass_streak}
            {set $legacybass
               {elem {find $entry legacy_bass_streak} 1}
            }
         }
         {if {find $entry note_color_shuffle}
            {set $colorshuffle
               {elem {find $entry note_color_shuffle} 1}
            }
         }
         {if {find $entry guitar_gem_colors}
            {set $gtrgem1
               {elem {elem {find $entry guitar_gem_colors} 1} 0}
            }
            {set $gtrgem2
               {elem {elem {find $entry guitar_gem_colors} 1} 1}
            }
            {set $gtrgem3
               {elem {elem {find $entry guitar_gem_colors} 1} 2}
            }
            {set $gtrgem4
               {elem {elem {find $entry guitar_gem_colors} 1} 3}
            }
            {set $gtrgem5
               {elem {elem {find $entry guitar_gem_colors} 1} 4}
            }
         }
         {if {find $entry guitar_smasher_colors}
            {set $gtrsm1
               {elem {elem {find $entry guitar_smasher_colors} 1} 0}
            }
            {set $gtrsm2
               {elem {elem {find $entry guitar_smasher_colors} 1} 1}
            }
            {set $gtrsm3
               {elem {elem {find $entry guitar_smasher_colors} 1} 2}
            }
            {set $gtrsm4
               {elem {elem {find $entry guitar_smasher_colors} 1} 3}
            }
            {set $gtrsm5
               {elem {elem {find $entry guitar_smasher_colors} 1} 4}
            }
         }
         {if {find $entry guitar_sustain_colors}
            {set $gtrsus1
               {elem {elem {find $entry guitar_sustain_colors} 1} 0}
            }
            {set $gtrsus2
               {elem {elem {find $entry guitar_sustain_colors} 1} 1}
            }
            {set $gtrsus3
               {elem {elem {find $entry guitar_sustain_colors} 1} 2}
            }
            {set $gtrsus4
               {elem {elem {find $entry guitar_sustain_colors} 1} 3}
            }
            {set $gtrsus5
               {elem {elem {find $entry guitar_sustain_colors} 1} 4}
            }
         }
         {if {find $entry drum_gem_colors}
            {set $drmgem1
               {elem {elem {find $entry drum_gem_colors} 1} 0}
            }
            {set $drmgem2
               {elem {elem {find $entry drum_gem_colors} 1} 1}
            }
            {set $drmgem3
               {elem {elem {find $entry drum_gem_colors} 1} 2}
            }
            {set $drmgem4
               {elem {elem {find $entry drum_gem_colors} 1} 3}
            }
            {set $drmgem5
               {elem {elem {find $entry drum_gem_colors} 1} 4}
            }
         }
         {if {find $entry drum_smasher_colors}
            {set $drms1
               {elem {elem {find $entry drum_smasher_colors} 1} 0}
            }
            {set $drms2
               {elem {elem {find $entry drum_smasher_colors} 1} 1}
            }
            {set $drms3
               {elem {elem {find $entry drum_smasher_colors} 1} 2}
            }
            {set $drms4
               {elem {elem {find $entry drum_smasher_colors} 1} 3}
            }
         }
      }
      {if {== {elem $entry 0} {basename track_textures}}
         {if {find $entry highway_texture}
            {set $highway
               {elem {find $entry highway_texture} 1}
            }
         }
         {if {find $entry streak_texture}
            {set $streak
               {elem {find $entry streak_texture} 1}
            }
         }
         {if {find $entry spotlight_texture}
            {set $spotlight
               {elem {find $entry spotlight_texture} 1}
            }
         }
      }
      {if {== {elem $entry 0} {basename ui_settings}}
         {if {find $entry disable_net_warnings}
            {set $skipnetwarning
               {elem {find $entry disable_net_warnings} 1}
            }
         }
         {if {find $entry show_song_author}
            {set $showauthor
               {elem {find $entry show_song_author} 1}
            }
         }
         {if {find $entry skip_intro_video}
            {set $skipintro
               {elem {find $entry skip_intro_video} 1}
            }
         }
         {if {find $entry skip_splash_screen}
            {set $skipsplash
               {elem {find $entry skip_splash_screen} 1}
            }
         }
         {if {find $entry song_title_always}
            {set $songtitle
               {elem {find $entry song_title_always} 1}
            }
         }
      }
      {if {== {elem $entry 0} {basename venue_settings}}
         {if {find $entry force_outfits}
            {set $forceoutfit
               {elem {find $entry force_outfits} 1}
            }
         }
         {if {find $entry force_venue}
            {set $forcevenue
               {elem {find $entry force_venue} 1}
            }
         }
         {if {find $entry force_minivenue}
            {set $forceminivenue
               {elem {find $entry force_minivenue} 1}
            }
         }
         {if {find $entry force_scene}
            {set $forcescene
               {elem {find $entry force_scene} 1}
            }
         }
         {if {find $entry random_venue}
            {set $randomvenue
               {elem {find $entry random_venue} 1}
            }
         }
         {if {find $entry random_outfits}
            {set $randomoutfit
               {elem {find $entry random_outfits} 1}
            }
         }
      }
   }
)
#define CONVERT_SETTINGS
(
   {foreach $entry {read_file $orig_ulti_settings_path}
      {if {== {elem $entry 0} {basename track_speed}}
         {set $trackspeed
            {elem {find $entry track_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename song_speed}}
         {set $speedmod
            {elem {find $entry song_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename emulate_fps}}
         {set $emulatefps
            {elem {find $entry emulate_fps} 1}
         }
      }
      {if {== {elem $entry 0} {basename black_bg}}
         {set $blackbg
            {elem {find $entry black_bg} 1}
         }
      }
      {if {== {elem $entry 0} {basename highway_texture}}
         {set $highway
            {elem {find $entry highway_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename streak_texture}}
         {set $streak
            {elem {find $entry streak_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_texture}}
         {set $spotlight
            {elem {find $entry spotlight_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_gem1}}
         {set $gtrgem1
            {elem {find $entry gtr_gem1} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_gem2}}
         {set $gtrgem2
            {elem {find $entry gtr_gem2} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_gem3}}
         {set $gtrgem3
            {elem {find $entry gtr_gem3} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_gem4}}
         {set $gtrgem4
            {elem {find $entry gtr_gem4} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_gem5}}
         {set $gtrgem5
            {elem {find $entry gtr_gem5} 1}
         }
      }
      {if {== {elem $entry 0} {basename drm_gem1}}
         {set $drmgem1
            {elem {find $entry drm_gem1} 1}
         }
      }
      {if {== {elem $entry 0} {basename drm_gem2}}
         {set $drmgem2
            {elem {find $entry drm_gem2} 1}
         }
      }
      {if {== {elem $entry 0} {basename drmg_em3}}
         {set $drmgem3
            {elem {find $entry drm_gem3} 1}
         }
      }
      {if {== {elem $entry 0} {basename drm_gem4}}
         {set $drmgem4
            {elem {find $entry drm_gem4} 1}
         }
      }
      {if {== {elem $entry 0} {basename drm_gem5}}
         {set $drmgem5
            {elem {find $entry drm_gem5} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtrsm1}}
         {set $gtrsm1
            {elem {find $entry gtrsm1} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtrsm2}}
         {set $gtrsm2
            {elem {find $entry gtrsm2} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtrsm3}}
         {set $gtrsm3
            {elem {find $entry gtrsm3} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtrsm4}}
         {set $gtrsm4
            {elem {find $entry gtrsm4} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtrsm5}}
         {set $gtrsm5
            {elem {find $entry gtrsm5} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_sus1}}
         {set $gtrsus1
            {elem {find $entry gtr_sus1} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_sus2}}
         {set $gtrsus2
            {elem {find $entry gtr_sus2} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_sus3}}
         {set $gtrsus3
            {elem {find $entry gtr_sus3} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_sus4}}
         {set $gtrsus4
            {elem {find $entry gtr_sus4} 1}
         }
      }
      {if {== {elem $entry 0} {basename gtr_sus5}}
         {set $gtrsus5
            {elem {find $entry gtr_sus5} 1}
         }
      }
      {if {== {elem $entry 0} {basename drms1}}
         {set $drms1
            {elem {find $entry drms1} 1}
         }
      }
      {if {== {elem $entry 0} {basename drms2}}
         {set $drms2
            {elem {find $entry drms2} 1}
         }
      }
      {if {== {elem $entry 0} {basename drms3}}
         {set $drms3
            {elem {find $entry drms3} 1}
         }
      }
      {if {== {elem $entry 0} {basename drms4}}
         {set $drms4
            {elem {find $entry drms4} 1}
         }
      }
      {if {== {elem $entry 0} {basename whammypb}}
         {set $whammypb
            {elem {find $entry whammypb} 1}
         }
      }
      {if {== {elem $entry 0} {basename syncdifspeeds}}
         {set $syncdifspeeds
            {elem {find $entry syncdifspeeds} 1}
         }
      }
      {if {== {elem $entry 0} {basename legacybass}}
         {set $legacybass
            {elem {find $entry legacybass} 1}
         }
      }
      {if {== {elem $entry 0} {basename forceoutfit}}
         {set $forceoutfit
            {elem {find $entry forceoutfit} 1}
         }
      }
      {if {== {elem $entry 0} {basename forcevenue}}
         {set $forcevenue
            {elem {find $entry forcevenue} 1}
         }
      }
      {if {== {elem $entry 0} {basename forceminivenue}}
         {set $forceminivenue
            {elem {find $entry forceminivenue} 1}
         }
      }
      {if {== {elem $entry 0} {basename forcescene}}
         {set $forcescene
            {elem {find $entry forcescene} 1}
         }
      }
      #ifdef HX_PS3
      {if {== {elem $entry 0} {basename skipsplash}}
         {set $skipsplash
            {elem {find $entry skipsplash} 1}
         }
      }
      #endif
      {if {== {elem $entry 0} {basename skipintro}}
         {set $skipintro
            {elem {find $entry skipintro} 1}
         }
      }
      {if {== {elem $entry 0} {basename padtar}}
         {set $padtar
            {elem {find $entry padtar} 1}
         }
      }
      {if {== {elem $entry 0} {basename paddrum}}
         {set $paddrum
            {elem {find $entry paddrum} 1}
         }
      }
      {if {== {elem $entry 0} {basename colorshuffle}}
         {set $colorshuffle
            {elem {find $entry colorshuffle} 1}
         }
      }
      {if {== {elem $entry 0} {basename randomvenue}}
         {set $randomvenue
            {elem {find $entry randomvenue} 1}
         }
      }
      {if {== {elem $entry 0} {basename randomoutfit}}
         {set $randomoutfit
            {elem {find $entry randomoutfit} 1}
         }
      }
      {if {== {elem $entry 0} {basename mic_gain}}
         {set $mic_gain_1
            {elem {elem {find $entry mic_gain} 1} 0}
         }
         {set $mic_gain_2
            {elem {elem {find $entry mic_gain} 1} 1}
         }
         {set $mic_gain_3
            {elem {elem {find $entry mic_gain} 1} 2}
         }
      }
      {if {== {elem $entry 0} {basename default_difficulties}}
         {set $default_diff0
            {elem {elem {find $entry default_difficulties} 1} 0}
         }
         {set $default_diff1
            {elem {elem {find $entry default_difficulties} 1} 1}
         }
         {set $default_diff2
            {elem {elem {find $entry default_difficulties} 1} 2}
         }
         {set $default_diff3
            {elem {elem {find $entry default_difficulties} 1} 3}
         }
      }
      {if {== {elem $entry 0} {basename vsync_rate}}
         {set $vsyncrate
            {elem {find $entry vsync_rate} 1}
         }
      }
      {if {== {elem $entry 0} {basename disable_net_warnings}}
         {set $skipnetwarning
            {elem {find $entry disable_net_warnings} 1}
         }
      }
      {if {== {elem $entry 0} {basename show_song_author}}
         {set $showauthor
            {elem {find $entry show_song_author} 1}
         }
      }
      {if {== {elem $entry 0} {basename second_kick_mapping}}
         {set $secondkick
            {elem {find $entry second_kick_mapping} 1}
         }
      }
   }
   {script_task
      kTaskSeconds
      (delay 7)
      (script
         {init_dta_writer}
         {passive_messages_panel queue_message converted_settings})
   }
)

#endif
#define NORMALGEM_SET
(gem_green.wid gem_red.wid gem_yellow.wid gem_blue.wid gem_orange.wid star_gem.wid)
#define HOPOGEM_SET
(gem_green_hopo.wid gem_red_hopo.wid gem_yellow_hopo.wid gem_blue_hopo.wid gem_orange_hopo.wid star_hopo.wid)
#define DRUMGEM_SET
(gem_kick.wid drum_red.wid drum_yellow.wid drum_blue.wid drum_green.wid drum_star.wid)
#define GTR_SUSTAIN_COLORS
(green red yellow blue orange star)
#define COLOR_SHUFFLE_SLOT_1
(
   {if_else $colorshuffle
      {random_int 0 5}
      $gtrgem1
   }
)
#define COLOR_SHUFFLE_SLOT_2
(
   {if_else $colorshuffle
      {random_int 0 5}
      $gtrgem2
   }
)
#define COLOR_SHUFFLE_SLOT_3
(
   {if_else $colorshuffle
      {random_int 0 5}
      $gtrgem3
   }
)
#define COLOR_SHUFFLE_SLOT_4
(
   {if_else $colorshuffle
      {random_int 0 5}
      $gtrgem4
   }
)
#define COLOR_SHUFFLE_SLOT_5
(
   {if_else $colorshuffle
      {random_int 0 5}
      $gtrgem5
   }
)

#define DRUMGEM_SLOT1
(
   $drmgem1
)
#define DRUMGEM_SLOT2
(
   {if_else $colorshuffle
      {random_int 1 5}
      $drmgem2
   }
)
#define DRUMGEM_SLOT3
(
   {if_else $colorshuffle
      {random_int 1 5}
      $drmgem3
   }
)
#define DRUMGEM_SLOT4
(
   {if_else $colorshuffle
      {random_int 1 5}
      $drmgem4
   }
)
#define DRUMGEM_SLOT5
(
   {if_else $colorshuffle
      {random_int 1 5}
      $drmgem5
   }
)
#define SLOT_SUSTAIN_COLORS
(
   {elem (GTR_SUSTAIN_COLORS)
      {if_else $colorshuffle
         {random_int 0 5}
         $gtrsus1
      }
   }
   {elem (GTR_SUSTAIN_COLORS)
      {if_else $colorshuffle
         {random_int 0 5}
         $gtrsus2
      }
   }
   {elem (GTR_SUSTAIN_COLORS)
      {if_else $colorshuffle
         {random_int 0 5}
         $gtrsus3
      }
   }
   {elem (GTR_SUSTAIN_COLORS)
      {if_else $colorshuffle
         {random_int 0 5}
         $gtrsus4
      }
   }
   {elem (GTR_SUSTAIN_COLORS)
      {if_else $colorshuffle
         {random_int 0 5}
         $gtrsus5
      }
   }
)
#define TBRBUL_ADV_FORCE_OUTFITS
(((ringo $forceroo $forceroi1 $forceroi2 $forceroi3 $forceroi4 none)   
   (george $forcegeo $forcegei1 $forcegei2 $forcegei3 $forcegei4 none)
   (john $forcejno $forcejni1 $forcejni2 $forcejni3 $forcejni4 none)
   (paul $forceplo $forcepli1 $forcepli2 $forcepli3 $forcepli4 none)))
#define RPC_HANDLER
(
   {set $current_game_mode {gamemode in_mode}}
   {write_file #ifdef HX_XBOX "GAME:/ulti_rpc.dta" #endif #ifdef HX_PS3 #ifdef REGION_EUROPE "GD:/dev_hdd0/game/BLES00532/USRDIR/ulti_rpc.dta" #else "GD:/dev_hdd0/game/BLUS30282/USRDIR/ulti_rpc.dta" #endif #endif
         {array
            (
               (song {song_mgr song_name {meta_performer song}})
               (mode $current_game_mode)
            )
         }
   }
)
#define OVERSHELL_DISALLOWED_SCREENS ;find a better way of doing this
(
   {'||'
      $overshell_up
      {== {ui current_screen} game_screen}
      {== {ui current_screen} song_select_screen}
      {== {ui current_screen} hth_game_screen}
      {== {ui current_screen} overshell_main_screen}
      {== {ui current_screen} options_milo_screen}
      {== {ui current_screen} qp_seldiff_screen}
      {== {ui current_screen} story_chapter_seldiff_screen}
      {== {ui current_screen} story_chapterchallenge_seldiff_screen}
      {== {ui current_screen} h2h_seldiff_screen}
      {== {ui current_screen} overshell_visual_screen}
      {== {ui current_screen} practice_game_screen}
      {== {ui current_screen} matchmaking_screen}
      {== {ui current_screen} load_nextsong_screen}
      {== {ui current_screen} nextstats_screen}
      {== {ui current_screen} guitar_tutorial_screen}
      {== {ui current_screen} sync_audio_net_screen}
      {== {ui current_screen} main_popup_swapper}
      {== {ui current_screen} practice_loading_screen}
      {== {ui current_screen} meta_loading_pause_new_section_screen}
      {== {ui current_screen} tutorial_level_menu_screen}
      {== {ui current_screen} restart_sync_audio_net_screen}
      {== {ui current_screen} meta_loading_main_screen}
      {== {ui current_screen} meta_loading_pause_new_song_screen}
      {== {ui current_screen} confirm_quit_screen}
      {== {ui current_screen} save_screen}
      {== {ui current_screen} story_chapter_songselect_screen}
      {== {ui current_screen} story_chapter_screen}
      {== {ui current_screen} story_progress_confirm_progress_delete_screen}
      {== {ui current_screen} story_accomplishments_screen}
      {== {ui current_screen} story_prizes_screen}
      {== {ui current_screen} story_memorabilia_screen}
      {== {ui current_screen} story_chaptermovie_screen}
      {== {ui current_screen} story_chaptermovie_screen}
      {== {ui current_screen} story_progress_sel_screen}
      {== {ui current_screen} story_hub_screen}
      {== {ui current_screen} real_loading_screen}
      {== {ui current_screen} practice_sel_section_screen}
      {== {ui current_screen} network_start_screen}
      {== {ui current_screen} meta_loading_uisink_lost_connection_screen} 
      {== {ui current_screen} story_retry_screen}
      {== {ui current_screen} practice_vocal_end_screen}
      {== {ui current_screen} lose_screen}
      {== {ui current_screen} endgame_waiting_screen} 
      {== {ui current_screen} coop_endgame_screen}
      {== {ui current_screen} tow_endgame_screen}
      {== {ui current_screen} score_duel_endgame_screen}
      {== {ui current_screen} nextsong_screen}
      {== {ui current_screen} lose_confirm_quit_screen}
      {== {ui current_screen} complete_screen}
      {== {ui current_screen} complete_accomplishments_screen}
   }
)
#define SONG_AUTHOR_INFO
(
   (
      #include ../ulti/song_updates/song_author_info.dta
   )
)
#define SETUP_MTV_OVERLAY
(
   {if
      {exists song.lbl}
      {do
         ($song
            {meta_performer song})
         ($song_text
            {song_mgr song_name $song})
         {if_else
            $showauthor
            {do
               {set $authorvar FALSE} ;find a better way of doing this at some point
               {set $author_text FALSE}
               {set $songvar {meta_performer song}}
               {foreach $entry SONG_AUTHOR_INFO
                  {if {== {elem $entry 0} {basename $songvar}}
                     {set $authorvar
                        {elem {find $entry author} 1}
                     }
                  }
               }
               #ifdef HX_WII
               {if
                  $authorvar
                  {set $author_text {sprint " | Author: " $authorvar}}
               }
               #else ;dont put me anywhere near a kitchen it'll catch flames with how bad this is done
               {if_else
                  $authorvar
                  {set $author_text {sprint " | Author: " $authorvar}}
                  {do
                     {set $song_dta_path {sprint {song_mgr song_path {symbol $songvar}} "/../../songs.dta"}}
                     #ifdef HX_PS3 ;hard code some stuff here because ps3 hw is trash. good thing people use a terrible method for adding customs. causes a slight stutter so should probably find elsewhere to do this
                     {unless
                        {&& 
                           {file_exists $song_dta_path} 
                           {'||' 
                              {== {gamemode in_mode} qp_coop_online}
                              {== {gamemode in_mode} story_online}
                              {== {gamemode in_mode} h2h_score_duel_unranked}
                              {== {gamemode in_mode} h2h_tug_of_war_unranked}
                           }
                        }
                        #ifdef REGION_EUROPE
                        {set $song_dta_path "GD:/dev_hdd0/game/BLES00532/USRDIR/CCF0001/songs/songs.dta"}
                        #else
                        {set $song_dta_path "GD:/dev_hdd0/game/BLUS30282/USRDIR/CCF0001/songs/songs.dta"} 
                        #endif
                     }
                     #endif
                     {unless
                        {file_exists $song_dta_path}
                        {set $song_dta_path FALSE}
                     }
                     {if
                        $song_dta_path
                        {foreach $entry {read_file $song_dta_path}
                           {if {== {elem $entry 0} {basename $songvar}}
                              {if {find $entry author}
                                 {set $authorvar
                                    {elem {find $entry author} 1}
                                 }
                              }
                           }
                        }
                        {if
                           $authorvar
                           {set $author_text {sprint " | Author: " $authorvar}}
                        }
                     }
                  }
               }
               #endif
            }
            {set $author_text FALSE}
         }
         {song.lbl set fixed_length 1000}
         {if_else
             {!= $speedmod 1}
             {if_else
                 $author_text
                 {song.lbl set_token_fmt {sprint $song_text " (" {int {'+' 0.5 {'*' $speedmod 100}}} "%)" $author_text}}
                 {song.lbl set_token_fmt {sprint $song_text " (" {int {'+' 0.5 {'*' $speedmod 100}}} "%)"}}
             }
             {if_else
                 $author_text
                 {song.lbl set_token_fmt {sprint $song_text $author_text}}
                 {song.lbl set_token_fmt {sprint $song_text}}
             }
          }
      }
   }
)
