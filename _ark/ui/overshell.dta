#define OVERSHELL_LIST_FILE
((file practice/practice_sel_section.milo)
 (focus sel_section.lst))
{new
   MultiSelectListPanel
   overshell_main_panel
   OVERSHELL_LIST_FILE
   (enter
      {sel_section.lst set_data (os_mod os_spd os_vis os_trk os_gfx os_cnt)}
      {title.lbl set text_token os_dxsettings}
      {$this pause_if_local}
      {set $overshell_up TRUE})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_spd
            {ui push_screen options_milo_screen}
         )
         (os_mod
            {ui push_screen overshell_modifier_screen}
         )
         (os_vis
            {ui push_screen overshell_visual_screen}
         )
         (os_gfx
            {ui push_screen overshell_graphics_screen}
         )
         (os_trk
            {ui push_screen overshell_trk_screen}
         )
         (os_cnt
            {ui push_screen overshell_cnt_screen}
         )
      }
   )
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen splash_screen}
         }
         #ifndef HX_WII
         {init_dta_writer}
         #endif
         {ui pop_screen}
         {set $overshell_up FALSE}
         {set $modifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_main_screen
   (panels overshell_main_panel)
   (focus overshell_main_panel)}

;
#define MODIFIER_DATA
((
   {if_else $syncdifspeeds os_syncdifspeeds1 os_syncdifspeeds0}
   #ifndef HX_XBOX
   {if_else $whammypb os_whammypb1 os_whammypb0}
   #endif
   {if_else $trkmuting os_trkmuting1 os_trkmuting0}
   {if_else $nomisounds os_nomisounds1 os_nomisounds0}
   #ifndef HX_WII
   {if_else $skipintro os_skipintro1 os_skipintro0}
   #endif
   #ifdef HX_PS3
   {if_else $skipsplash os_skipsplash1 os_skipsplash0}
   #else
   os_blnk
   #endif
))
{new
   MultiSelectListPanel
   overshell_modifier_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_mod}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_syncdifspeeds1
            {set $syncdifspeeds {! $syncdifspeeds}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_syncdifspeeds0
            {set $syncdifspeeds {! $syncdifspeeds}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_whammypb1
            {set $whammypb {! $whammypb}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_whammypb0
            {set $whammypb {! $whammypb}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_trkmuting1
            {set $trkmuting {! $trkmuting}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_trkmuting0
            {set $trkmuting {! $trkmuting}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_nomisounds1
            {set $nomisounds {! $nomisounds}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_nomisounds0
            {set $nomisounds {! $nomisounds}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_skipintro1
            {set $skipintro {! $skipintro}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_skipintro0
            {set $skipintro {! $skipintro}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_skipsplash1
            {set $skipsplash {! $skipsplash}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_skipsplash0
            {set $skipsplash {! $skipsplash}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data MODIFIER_DATA}
   {if $modifierpos
      {sel_section.lst set_selected $modifierpos}
   })
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}
         {set $modifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_modifier_screen
   (panels overshell_modifier_panel)
   (focus overshell_modifier_panel)}
;

;
#define VIS_MODIFIER_DATA
((
   {if_else $songtitle os_songtitle1 os_songtitle0}
   {if_else $showauthor os_showauthor1 os_showauthor0}
   {if_else $fcring os_fcring1 os_fcring0}
   {if_else $legacybass os_legacybass1 os_legacybass0}
   {if_else $colorshuffle os_colorshuffle1 os_colorshuffle0}
   {if_else $randomvenue os_randomvenue1 os_randomvenue0}
   {if_else $randomoutfit os_randomoutfit1 os_randomoutfit0}
   #ifdef HX_PS3
   {if_else $skipnetwarning os_skipnetwarning1 os_skipnetwarning0}
   #endif
))
{new
   MultiSelectListPanel
   overshell_visual_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_vis}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_songtitle1
            {set $songtitle {! $songtitle}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_songtitle0
            {set $songtitle {! $songtitle}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_showauthor1
            {set $showauthor {! $showauthor}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_showauthor0
            {set $showauthor {! $showauthor}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_fcring1
            {set $fcring {! $fcring}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_fcring0
            {set $fcring {! $fcring}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_legacybass1
            {set $legacybass {! $legacybass}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_legacybass0
            {set $legacybass {! $legacybass}}
            {set $modifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_colorshuffle1
            {set $colorshuffle {! $colorshuffle}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_colorshuffle0
            {set $colorshuffle {! $colorshuffle}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_randomvenue1
            {set $randomvenue {! $randomvenue}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_randomvenue0
            {set $randomvenue {! $randomvenue}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            #ifndef HX_WII
            {passive_messages_panel queue_message cdlc_warning_message}
            #endif
            {$this lst_reset}
         )
         (os_randomoutfit1
            {set $randomoutfit {! $randomoutfit}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_randomoutfit0
            {set $randomoutfit {! $randomoutfit}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            #ifndef HX_WII
            {passive_messages_panel queue_message cdlc_warning_message}
            #endif
            {$this lst_reset}
         )
         (os_skipnetwarning1
            {set $skipnetwarning {! $skipnetwarning}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_skipnetwarning0
            {set $skipnetwarning {! $skipnetwarning}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data VIS_MODIFIER_DATA}
   {if $vismodifierpos
      {sel_section.lst set_selected $vismodifierpos}
   })
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}
         {set $vismodifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_visual_screen
   (panels overshell_visual_panel)
   (focus overshell_visual_panel)}
;
;
#define GFX_MODIFIER_DATA
((
   #ifndef HX_WII
   os_venuefps
   os_vsync
   {if_else $forcelod0 os_forcelod01 os_forcelod00}
   #endif
   #ifdef HX_WII
   {if_else $disablegfx os_disablegfx1 os_disablegfx0}
   #endif
   {if_else $blackbg os_blackbg1 os_blackbg0}
   {if_else $postfx os_postfx1 os_postfx0}
   {if_else $fxdof os_fxdof1 os_fxdof0}
   {if_else $scrnoise os_scrnoise1 os_scrnoise0}
   {if_else $scrbloom os_scrbloom1 os_scrbloom0}
   {if_else $camerashake os_camerashake1 os_camerashake0}
   #ifndef HX_WII
   {if_else $mbblend os_mbblend1 os_mbblend0}
   #endif
))
{new
   MultiSelectListPanel
   overshell_graphics_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gfx}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_disablegfx1
            {set $disablegfx {! $disablegfx}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         {rnd toggle_all_postprocs}
         )
         (os_disablegfx0
            {set $disablegfx {! $disablegfx}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         {rnd toggle_all_postprocs}
         )
         (os_postfx1
            {set $postfx {! $postfx}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
            #ifdef HX_WII
            {pp_override}
            #else
            {rnd toggle_all_postprocs}
            #endif
         )
         (os_postfx0
            {set $postfx {! $postfx}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
            #ifdef HX_WII
            {pp_override}
            #else
            {rnd toggle_all_postprocs}
            #endif
         )
         (os_scrbloom1
            {set $scrbloom {! $scrbloom}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_scrbloom0
            {set $scrbloom {! $scrbloom}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_scrnoise1
            {set $scrnoise {! $scrnoise}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_scrnoise0
            {set $scrnoise {! $scrnoise}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_camerashake1
            {set $camerashake {! $camerashake}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_camerashake0
            {set $camerashake {! $camerashake}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_mbblend1
            {set $mbblend {! $mbblend}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_mbblend0
            {set $mbblend {! $mbblend}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_fxdof1
            {set $fxdof {! $fxdof}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_fxdof0
            {set $fxdof {! $fxdof}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_forcelod01
            {set $forcelod0 {! $forcelod0}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_forcelod00
            {set $forcelod0 {! $forcelod0}}
            {set $gfxmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_venuefps
            {ui push_screen overshell_venuefps_screen}
         )
         (os_vsync
            {ui push_screen overshell_vsync_screen}
         )
         (os_blackbg1
            {set $blackbg {! $blackbg}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_blackbg0
            {set $blackbg {! $blackbg}}
            {set $vismodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GFX_MODIFIER_DATA}
   {if $gfxmodifierpos
      {sel_section.lst set_selected $gfxmodifierpos}
   })
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_graphics_screen}
         {ui pop_screen}
         {set $gfxmodifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_graphics_screen
   (panels overshell_graphics_panel)
   (focus overshell_graphics_panel)}
;
#define GFX_LEAVE
(
   {ui goto_screen overshell_graphics_screen}
   {ui pop_screen}
)
{new
   MultiSelectListPanel
   overshell_vsync_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_vsync}}
      {sel_section.lst set_selected {switch $vsyncrate (0 0) (1 1) (2 2) (4 3)}}
      {$this pause_if_local})
   (exit
      {rnd set_sync $vsyncrate}
      {$this lst_reset})
   (SELECT_MSG
      {switch {$component selected_sym}
         (infinite
            {set $vsyncrate 0}
            GFX_LEAVE
         )
         (full
            {set $vsyncrate 1}
            GFX_LEAVE
         )
         (half
            {set $vsyncrate 2}
            GFX_LEAVE
         )
         (quarter
            {set $vsyncrate 4}
            GFX_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data (infinite full half quarter os_blnk os_blnk)})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         GFX_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_vsync_screen
   (panels overshell_vsync_panel)
   (focus overshell_vsync_panel)}
{new
   MultiSelectListPanel
   overshell_venuefps_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_venuefps}}
      {sel_section.lst set_selected {switch $emulatefps (60 0) (30 1) (24 2) (15 3) (12 4) (6 5) (1 6)}}
      {$this pause_if_local})
   (exit
      {rnd set_sync $vsyncrate}
      {$this lst_reset})
   (SELECT_MSG
      {switch {$component selected_sym}
         (60fps
            {set $emulatefps 60}
            GFX_LEAVE
         )
         (30fps
            {set $emulatefps 30}
            GFX_LEAVE
         )
         (24fps
            {set $emulatefps 24}
            GFX_LEAVE
         )
         (15fps
            {set $emulatefps 15}
            GFX_LEAVE
         )
         (12fps
            {set $emulatefps 12}
            GFX_LEAVE
         )
         (6fps
            {set $emulatefps 6}
            GFX_LEAVE
         )
         (1fps
            {set $emulatefps 1}
            GFX_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data (60fps 30fps 24fps 15fps 12fps 6fps 1fps)})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         GFX_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_venuefps_screen
   (panels overshell_venuefps_panel)
   (focus overshell_venuefps_panel)}
;

;
#define TRK_MODIFIER_DATA
((
   #ifndef HX_WII os_reset #endif os_hw os_strk os_spotlight os_venues os_minivenues os_scenes os_outfits os_gems_colors os_smashers_colors
))
{new
   MultiSelectListPanel
   overshell_trk_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_trk}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_wiisux
            {set $wiisux TRUE}
         )
         (os_reset
            {set $gemcustomtexture FALSE}
            {set $gem "none"}
            {set $smashercustomtexture FALSE}
            {set $smasher "none"}
            {set $streakcustomtexture FALSE}
            {set $streak "none"}
            {set $spotlightcustomtexture FALSE}
            {set $highwaycustomtexture FALSE}
            {set $highway "none"}
            {set $spotlight "none"}
            {set $multiringcustomtexture FALSE}
            {set $multiring "none"}
            {set $odbarcustomtexture FALSE}
            {set $odbar "none"}
            {set $scorecustomtexture FALSE}
            {set $scoretex "none"}
            {$this lst_reset}
            {init_dta_writer}
            {ui push_screen reset_info_screen}
         )
         (os_hw
            {ui push_screen overshell_highway_screen}
         )
         (os_strk
            {ui push_screen overshell_streak_screen}
         )
         (os_spotlight
            {ui push_screen overshell_spotlight_screen}
         )
         (os_venues
            {ui push_screen overshell_venues_screen}
         )
         (os_minivenues
            {ui push_screen overshell_minivenues_screen}
         )
         (os_scenes
            {ui push_screen overshell_scenes_screen}
         )
         (os_outfits
            {ui push_screen overshell_outfits_screen}
         )
         (os_gems_colors
            {ui push_screen overshell_gem_color_screen}
         )
         (os_smashers_colors
            {ui push_screen overshell_smasher_color_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data TRK_MODIFIER_DATA}
   {if $trkmodifierpos
      {sel_section.lst set_selected $trkmodifierpos}
   })
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}
         {set $trkmodifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_trk_screen
   (panels overshell_trk_panel)
   (focus overshell_trk_panel)}

;

; take this "code" as an example as why you should leave this to the pros not like me


;
#define TBRB_VENUES_MODIFIER_DATA
((off cavern sullivan shea budokan rooftop))
{new
    MultiSelectListPanel
    overshell_venues_panel
    OVERSHELL_LIST_FILE
    (enter
        #ifndef HX_WII
        {passive_messages_panel queue_message cdlc_warning_message}
        #endif
        {sel_section.lst set_data TBRB_VENUES_MODIFIER_DATA}
        {title.lbl set text_token {localize os_venues}})
    (exit)
    (SELECT_MSG
      {set $forcevenue {$component selected_sym}}
      {ui goto_screen overshell_trk_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   UIScreen
   overshell_venues_screen
   (panels overshell_venues_panel)
   (focus overshell_venues_panel)}
;
#define TBRB_MINIVENUES_MODIFIER_DATA
((off abbeyroad01 abbeyroad01field abbeyroad01helter abbeyroad01hillside abbeyroad01ocean abbeyroad01ussr abbeyroad01wallfade abbeyroad01within field goodmorning hillside ocean pepperland performancespace01 performancespace02 performancespace02rev performancespace03 performancespace04 performancespace06 submarine walrus weeps))
{new
    MultiSelectListPanel
    overshell_minivenues_panel
    OVERSHELL_LIST_FILE
    (enter
        #ifndef HX_WII
        {passive_messages_panel queue_message cdlc_warning_message}
        #endif
        {sel_section.lst set_data TBRB_MINIVENUES_MODIFIER_DATA}
        {title.lbl set text_token {localize os_minivenues}})
    (exit)
    (SELECT_MSG
      {set $forceminivenue {$component selected_sym}}
      {ui goto_screen overshell_trk_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   UIScreen
   overshell_minivenues_screen
   (panels overshell_minivenues_panel)
   (focus overshell_minivenues_panel)}
;
#define TBRB_SCENES_MODIFIER_DATA
((off birds birdwallpaper cloudy dotpaths01 filmgrain fireworks01 fireworks02 flowersgrow01 herecomesthesun01 indian01 indian02 indian03 kaleido01 kaleido02 lightboke lucykaleido moire01 moire02 moire03 projection projectionbird releanor rhelter rkaleido03 rsomething rsunraypoly russr silhouette starfield stripes01 stripes02 stripes03 stripes04 stripes05 stripes06 vines01 whitebackground within withinkaleido))
{new
    MultiSelectListPanel
    overshell_scenes_panel
    OVERSHELL_LIST_FILE
    (enter
        #ifndef HX_WII
        {passive_messages_panel queue_message cdlc_warning_message}
        #endif
        {sel_section.lst set_data TBRB_SCENES_MODIFIER_DATA}
        {title.lbl set text_token {localize os_scenes}})
    (exit)
    (SELECT_MSG
      {set $forcescene {$component selected_sym}}
      {ui goto_screen overshell_trk_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   UIScreen
   overshell_scenes_screen
   (panels overshell_scenes_panel)
   (focus overshell_scenes_panel)}
;

;
#define TBRB_OUTFITS_MODIFIER_DATA
((off budokan01 budokan02 cavern cavern02 love love_alt love_hdp revolver01 revolver01_alt revolver01_hdp rooftop sgtpepper02 sgtpepper03 sgtpepper03_hdp sgtpepper03_alt sgtpepper03_alt_hdp sgtpepper sgtpepper_alt shea sixtyeight02 sixtyeight02_hdp sixtyeight sixtyeight_hdp sixtynine sixtynine_hdp straw straw_alt sullivan walrus01 walrus02 yellow01 hidden))
{new
    MultiSelectListPanel
    overshell_outfits_panel
    OVERSHELL_LIST_FILE
    (enter
        #ifndef HX_WII
        {passive_messages_panel queue_message cdlc_warning_message}
        #endif
        {sel_section.lst set_data TBRB_OUTFITS_MODIFIER_DATA}
        {title.lbl set text_token {localize os_outfits}})
    (exit)
    (SELECT_MSG
      {set $forceoutfit {$component selected_sym}}
      {ui goto_screen overshell_trk_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   UIScreen
   overshell_outfits_screen
   (panels overshell_outfits_panel)
   (focus overshell_outfits_panel)}
;

#define GEMC_MODIFIER_DATA ; dta make me cry why is dta dta
((
   os_gtr_gems_color os_gtr_sus_color os_drm_gems_color os_blnk os_blnk
))
{new
   MultiSelectListPanel
   overshell_gem_color_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gems_colors}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_gtr_gems_color
            {ui push_screen overshell_gtr_gem_color_screen}
         )
         (os_gtr_sus_color
            {ui push_screen overshell_gtr_sus_color_screen}
         )
         (os_drm_gems_color
            {ui push_screen overshell_drm_gem_color_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GEMC_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gem_color_screen
   (panels overshell_gem_color_panel)
   (focus overshell_gem_color_panel)}
   ;
;

#define GGEMC_MODIFIER_DATA
((
   os_reset_gem os_gtr_gems_1 os_gtr_gems_2 os_gtr_gems_3 os_gtr_gems_4 os_gtr_gems_5
))
{new
   MultiSelectListPanel
   overshell_gtr_gem_color_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_color}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_reset_gem
            {set $gtrgem1 0}
            {set $gtrgem2 1}
            {set $gtrgem3 2}
            {set $gtrgem4 3}
            {set $gtrgem5 4}
         )
         (os_gtr_gems_1
            {ui push_screen overshell_gtr_gems_1_screen}
         )
         (os_gtr_gems_2
            {ui push_screen overshell_gtr_gems_2_screen}
         )
         (os_gtr_gems_3
            {ui push_screen overshell_gtr_gems_3_screen}
         )
         (os_gtr_gems_4
            {ui push_screen overshell_gtr_gems_4_screen}
         )
         (os_gtr_gems_5
            {ui push_screen overshell_gtr_gems_5_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GGEMC_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_gem_color_screen
   (panels overshell_gtr_gem_color_panel)
   (focus overshell_gtr_gem_color_panel)}
   ;
;

;

#define DGEMC_MODIFIER_DATA
((
   os_reset_gem os_drm_gems_1 os_drm_gems_2 os_drm_gems_3 os_drm_gems_4 os_drm_gems_5
))
{new
   MultiSelectListPanel
   overshell_drm_gem_color_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_gems_color}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_reset_gem
            {set $drmgem1 0}
            {set $drmgem2 1}
            {set $drmgem3 2}
            {set $drmgem4 3}
            {set $drmgem5 4}
         )
         (os_drm_gems_1
            {ui push_screen overshell_drm_gems_1_screen}
         )
         (os_drm_gems_2
            {ui push_screen overshell_drm_gems_2_screen}
         )
         (os_drm_gems_3
            {ui push_screen overshell_drm_gems_3_screen}
         )
         (os_drm_gems_4
            {ui push_screen overshell_drm_gems_4_screen}
         )
         (os_drm_gems_5
            {ui push_screen overshell_drm_gems_5_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DGEMC_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_gem_color_screen
   (panels overshell_drm_gem_color_panel)
   (focus overshell_drm_gem_color_panel)}
   ;
;

;

#define GSUSC_MODIFIER_DATA
((
   os_reset_sus os_gtr_sus_1 os_gtr_sus_2 os_gtr_sus_3 os_gtr_sus_4 os_gtr_sus_5
))
{new
   MultiSelectListPanel
   overshell_gtr_sus_color_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_sus_color}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_reset_sus
            {set $gtrsus1 0}
            {set $gtrsus2 1}
            {set $gtrsus3 2}
            {set $gtrsus4 3}
            {set $gtrsus5 4}
         )
         (os_gtr_sus_1
            {ui push_screen overshell_gtr_sus_1_screen}
         )
         (os_gtr_sus_2
            {ui push_screen overshell_gtr_sus_2_screen}
         )
         (os_gtr_sus_3
            {ui push_screen overshell_gtr_sus_3_screen}
         )
         (os_gtr_sus_4
            {ui push_screen overshell_gtr_sus_4_screen}
         )
         (os_gtr_sus_5
            {ui push_screen overshell_gtr_sus_5_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GSUSC_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_sus_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_sus_color_screen
   (panels overshell_gtr_sus_color_panel)
   (focus overshell_gtr_sus_color_panel)}
   ;
;

#define GCOLORS_MODIFIER_DATA
((
   os_green_gem os_red_gem os_yellow_gem os_blue_gem os_orange_gem os_overdrive_gem
))
#define DCOLORS_MODIFIER_DATA
((
   os_red_gem os_yellow_gem os_blue_gem os_green_gem os_kick_gem os_overdrive_gem
))
#define GSMASHERS_MODIFIER_DATA
((
   os_green_gem os_red_gem os_yellow_gem os_blue_gem os_orange_gem os_blnk
))
#define DSMASHERS_MODIFIER_DATA
((
   os_red_gem os_yellow_gem os_blue_gem os_green_gem os_orange_gem os_blnk
))
#define GCOLORS_LEAVE
(
   {ui goto_screen overshell_gtr_gem_color_screen}
   {ui pop_screen}
)
#define DCOLORS_LEAVE
(
   {ui goto_screen overshell_drm_gem_color_screen}
   {ui pop_screen}
)

#define SUSCOLORS_LEAVE
(
   {ui goto_screen overshell_gtr_gem_color_screen}
   {ui pop_screen}
)
#define GSMASHER_LEAVE
(
   {ui goto_screen overshell_gtr_smasher_color_screen}
   {ui pop_screen}
)
#define DSMASHER_LEAVE
(
   {ui goto_screen overshell_drm_smasher_color_screen}
   {ui pop_screen}
)

;
{new
   MultiSelectListPanel
   overshell_gtr_gems_1_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_1}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrgem1 0}
            GCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrgem1 1}
            GCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrgem1 2}
            GCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrgem1 3}
            GCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrgem1 4}
            GCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrgem1 5}
            GCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_gems_1_screen
   (panels overshell_gtr_gems_1_panel)
   (focus overshell_gtr_gems_1_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_gems_2_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_2}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrgem2 0}
            GCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrgem2 1}
            GCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrgem2 2}
            GCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrgem2 3}
            GCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrgem2 4}
            GCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrgem2 5}
            GCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_gems_2_screen
   (panels overshell_gtr_gems_2_panel)
   (focus overshell_gtr_gems_2_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_gems_3_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_3}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrgem3 0}
            GCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrgem3 1}
            GCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrgem3 2}
            GCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrgem3 3}
            GCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrgem3 4}
            GCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrgem3 5}
            GCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_gems_3_screen
   (panels overshell_gtr_gems_3_panel)
   (focus overshell_gtr_gems_3_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_gems_4_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_4}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrgem4 0}
            GCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrgem4 1}
            GCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrgem4 2}
            GCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrgem4 3}
            GCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrgem4 4}
            GCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrgem4 5}
            GCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_gems_4_screen
   (panels overshell_gtr_gems_4_panel)
   (focus overshell_gtr_gems_4_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_gems_5_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_5}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrgem5 0}
            GCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrgem5 1}
            GCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrgem5 2}
            GCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrgem5 3}
            GCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrgem5 4}
            GCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrgem5 5}
            GCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_gems_5_screen
   (panels overshell_gtr_gems_5_panel)
   (focus overshell_gtr_gems_5_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_gems_1_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_gems_1}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_red_gem
            {set $drmgem1 1}
            DCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $drmgem1 2}
            DCOLORS_LEAVE
         )
         (os_blue_gem
            {set $drmgem1 3}
            DCOLORS_LEAVE
         )
         (os_green_gem
            {set $drmgem1 4}
            DCOLORS_LEAVE
         )
         (os_kick_gem
            {set $drmgem1 0}
            DCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $drmgem1 5}
            DCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_gems_1_screen
   (panels overshell_drm_gems_1_panel)
   (focus overshell_drm_gems_1_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_gems_2_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_gems_2}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_red_gem
            {set $drmgem2 1}
            DCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $drmgem2 2}
            DCOLORS_LEAVE
         )
         (os_blue_gem
            {set $drmgem2 3}
            DCOLORS_LEAVE
         )
         (os_green_gem
            {set $drmgem2 4}
            DCOLORS_LEAVE
         )
         (os_kick_gem
            {set $drmgem2 0}
            DCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $drmgem2 5}
            DCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_gems_2_screen
   (panels overshell_drm_gems_2_panel)
   (focus overshell_drm_gems_2_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_gems_3_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_gems_3}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_red_gem
            {set $drmgem3 1}
            DCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $drmgem3 2}
            DCOLORS_LEAVE
         )
         (os_blue_gem
            {set $drmgem3 3}
            DCOLORS_LEAVE
         )
         (os_green_gem
            {set $drmgem3 4}
            DCOLORS_LEAVE
         )
         (os_kick_gem
            {set $drmgem3 0}
            DCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $drmgem3 5}
            DCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_gems_3_screen
   (panels overshell_drm_gems_3_panel)
   (focus overshell_drm_gems_3_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_gems_4_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_gems_4}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_red_gem
            {set $drmgem4 1}
            DCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $drmgem4 2}
            DCOLORS_LEAVE
         )
         (os_blue_gem
            {set $drmgem4 3}
            DCOLORS_LEAVE
         )
         (os_green_gem
            {set $drmgem4 4}
            DCOLORS_LEAVE
         )
         (os_kick_gem
            {set $drmgem4 0}
            DCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $drmgem4 5}
            DCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_gems_4_screen
   (panels overshell_drm_gems_4_panel)
   (focus overshell_drm_gems_4_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_gems_5_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_gems_5}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_red_gem
            {set $drmgem5 1}
            DCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $drmgem5 2}
            DCOLORS_LEAVE
         )
         (os_blue_gem
            {set $drmgem5 3}
            DCOLORS_LEAVE
         )
         (os_green_gem
            {set $drmgem5 4}
            DCOLORS_LEAVE
         )
         (os_kick_gem
            {set $drmgem5 0}
            DCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $drmgem5 5}
            DCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_gem_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_gems_5_screen
   (panels overshell_drm_gems_5_panel)
   (focus overshell_drm_gems_5_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_sus_1_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_sus_1}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsus1 0}
            SUSCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrsus1 1}
            SUSCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrsus1 2}
            SUSCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrsus1 3}
            SUSCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrsus1 4}
            SUSCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrsus1 5}
            SUSCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_sus_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_sus_1_screen
   (panels overshell_gtr_sus_1_panel)
   (focus overshell_gtr_sus_1_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_sus_2_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_sus_2}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsus2 0}
            SUSCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrsus2 1}
            SUSCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrsus2 2}
            SUSCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrsus2 3}
            SUSCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrsus2 4}
            SUSCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrsus2 5}
            SUSCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_sus_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_sus_2_screen
   (panels overshell_gtr_sus_2_panel)
   (focus overshell_gtr_sus_2_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_sus_3_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_sus_3}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsus3 0}
            SUSCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrsus3 1}
            SUSCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrsus3 2}
            SUSCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrsus3 3}
            SUSCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrsus3 4}
            SUSCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrsus3 5}
            SUSCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_sus_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_sus_3_screen
   (panels overshell_gtr_sus_3_panel)
   (focus overshell_gtr_sus_3_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_sus_4_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_sus_4}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsus4 0}
            SUSCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrsus4 1}
            SUSCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrsus4 2}
            SUSCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrsus4 3}
            SUSCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrsus4 4}
            SUSCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrsus4 5}
            SUSCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_sus_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_sus_4_screen
   (panels overshell_gtr_sus_4_panel)
   (focus overshell_gtr_sus_4_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_sus_5_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_sus_5}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsus5 0}
            SUSCOLORS_LEAVE
         )
         (os_red_gem
            {set $gtrsus5 1}
            SUSCOLORS_LEAVE
         )
         (os_yellow_gem
            {set $gtrsus5 2}
            SUSCOLORS_LEAVE
         )
         (os_blue_gem
            {set $gtrsus5 3}
            SUSCOLORS_LEAVE
         )
         (os_orange_gem
            {set $gtrsus5 4}
            SUSCOLORS_LEAVE
         )
         (os_overdrive_gem
            {set $gtrsus5 5}
            SUSCOLORS_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GCOLORS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_sus_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_sus_5_screen
   (panels overshell_gtr_sus_5_panel)
   (focus overshell_gtr_sus_5_panel)}
   ;
;

#define SMASHERC_MODIFIER_DATA
((
   os_gtr_smasher_color os_drm_smasher_color os_blnk os_blnk
))
{new
   MultiSelectListPanel
   overshell_smasher_color_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_smashers_colors}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_gtr_smasher_color
            {ui push_screen overshell_gtr_smasher_color_screen}
         )
         (os_drm_smasher_color
            {ui push_screen overshell_drm_smasher_color_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data SMASHERC_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_smasher_color_screen
   (panels overshell_smasher_color_panel)
   (focus overshell_smasher_color_panel)}
   ;
;

;

#define GSMASHERC_MODIFIER_DATA
((
   os_reset_gem os_gtr_smasher_1 os_gtr_smasher_2 os_gtr_smasher_3 os_gtr_smasher_4 os_gtr_smasher_5
))
{new
   MultiSelectListPanel
   overshell_gtr_smasher_color_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_smasher_color}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_reset_gem
            {set $gtrsm1 green}
            {set $gtrsm2 red}
            {set $gtrsm3 yellow}
            {set $gtrsm4 blue}
            {set $gtrsm5 orange}
         )
         (os_gtr_smasher_1
            {ui push_screen overshell_gtr_smasher_1_screen}
         )
         (os_gtr_smasher_1
            {ui push_screen overshell_gtr_smasher_1_screen}
         )
         (os_gtr_smasher_2
            {ui push_screen overshell_gtr_smasher_2_screen}
         )
         (os_gtr_smasher_3
            {ui push_screen overshell_gtr_smasher_3_screen}
         )
         (os_gtr_smasher_4
            {ui push_screen overshell_gtr_smasher_4_screen}
         )
         (os_gtr_smasher_5
            {ui push_screen overshell_gtr_smasher_5_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GSMASHERC_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_smasher_color_screen
   (panels overshell_gtr_smasher_color_panel)
   (focus overshell_gtr_smasher_color_panel)}
   ;
;

;

#define DSMASHERC_MODIFIER_DATA
((
   os_reset_gem os_drm_smasher_1 os_drm_smasher_2 os_drm_smasher_3 os_drm_smasher_4 os_blnk
))
{new
   MultiSelectListPanel
   overshell_drm_smasher_color_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_smasher_color}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_reset_gem
            {set $drms1 red}
            {set $drms2 yellow}
            {set $drms3 blue}
            {set $drms4 green}
         )
         (os_drm_smasher_1
            {ui push_screen overshell_drm_smasher_1_screen}
         )
         (os_drm_smasher_2
            {ui push_screen overshell_drm_smasher_2_screen}
         )
         (os_drm_smasher_3
            {ui push_screen overshell_drm_smasher_3_screen}
         )
         (os_drm_smasher_4
            {ui push_screen overshell_drm_smasher_4_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DSMASHERC_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_smasher_color_screen
   (panels overshell_drm_smasher_color_panel)
   (focus overshell_drm_smasher_color_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_smasher_1_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_smasher_1}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsm1 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $gtrsm1 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $gtrsm1 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $gtrsm1 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $gtrsm1 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_smasher_1_screen
   (panels overshell_gtr_smasher_1_panel)
   (focus overshell_gtr_smasher_1_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_smasher_2_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_smasher_2}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsm2 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $gtrsm2 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $gtrsm2 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $gtrsm2 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $gtrsm2 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_smasher_2_screen
   (panels overshell_gtr_smasher_2_panel)
   (focus overshell_gtr_smasher_2_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_smasher_3_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_smasher_3}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsm3 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $gtrsm3 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $gtrsm3 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $gtrsm3 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $gtrsm3 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_smasher_3_screen
   (panels overshell_gtr_smasher_3_panel)
   (focus overshell_gtr_smasher_3_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_smasher_4_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_smasher_4}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsm4 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $gtrsm4 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $gtrsm4 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $gtrsm4 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $gtrsm4 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_smasher_4_screen
   (panels overshell_gtr_smasher_4_panel)
   (focus overshell_gtr_smasher_4_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_gtr_smasher_5_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_smasher_5}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $gtrsm5 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $gtrsm5 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $gtrsm5 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $gtrsm5 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $gtrsm5 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data GSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_gtr_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_gtr_smasher_5_screen
   (panels overshell_gtr_smasher_5_panel)
   (focus overshell_gtr_smasher_5_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_smasher_1_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_smasher_1}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $drms1 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $drms1 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $drms1 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $drms1 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $drms1 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_smasher_1_screen
   (panels overshell_drm_smasher_1_panel)
   (focus overshell_drm_smasher_1_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_smasher_2_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_smasher_2}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $drms2 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $drms2 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $drms2 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $drms2 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $drms2 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_smasher_2_screen
   (panels overshell_drm_smasher_2_panel)
   (focus overshell_drm_smasher_2_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_smasher_3_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_smasher_3}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $drms3 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $drms3 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $drms3 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $drms3 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $drms3 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_smasher_3_screen
   (panels overshell_drm_smasher_3_panel)
   (focus overshell_drm_smasher_3_panel)}
   ;
;

;
{new
   MultiSelectListPanel
   overshell_drm_smasher_4_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_drm_smasher_4}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_green_gem
            {set $drms4 green}
            GSMASHER_LEAVE
         )
         (os_red_gem
            {set $drms4 red}
            GSMASHER_LEAVE
         )
         (os_yellow_gem
            {set $drms4 yellow}
            GSMASHER_LEAVE
         )
         (os_blue_gem
            {set $drms4 blue}
            GSMASHER_LEAVE
         )
         (os_orange_gem
            {set $drms4 orange}
            GSMASHER_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data DSMASHERS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_drm_smasher_color_screen}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_drm_smasher_4_screen
   (panels overshell_drm_smasher_4_panel)
   (focus overshell_drm_smasher_4_panel)}
   ;
;

;I HOPE SHE MADE LOTSA SPAGHETTI :kekw:

;

;
{new
    MultiSelectListPanel
    overshell_highway_panel
    OVERSHELL_LIST_FILE
    (enter
        {sel_section.lst set_data
            (#include track/highway/highway.dta)}
        {title.lbl set text_token {localize os_hw}})
    (exit)
    (SELECT_MSG
      {set $highwaycustomtexture TRUE}
      {set $highway {$component selected_sym}}
      {ui goto_screen overshell_trk_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   UIScreen
   overshell_highway_screen
   (panels overshell_highway_panel)
   (focus overshell_highway_panel)}
;
{new
    MultiSelectListPanel
    overshell_streak_panel
    OVERSHELL_LIST_FILE
    (enter
        {sel_section.lst set_data
            (#include track/streak/streak.dta)}
        {title.lbl set text_token {localize os_strk}})
    (exit)
    (SELECT_MSG
      {set $streakcustomtexture TRUE}
      {set $streak {$component selected_sym}}
      {ui goto_screen overshell_trk_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   UIScreen
   overshell_streak_screen
   (panels overshell_streak_panel)
   (focus overshell_streak_panel)}
;
{new
    MultiSelectListPanel
    overshell_spotlight_panel
    OVERSHELL_LIST_FILE
    (enter
        {sel_section.lst set_data
            (#include track/spotlight/spotlight.dta)}
        {title.lbl set text_token {localize os_spotlight}})
    (exit)
    (SELECT_MSG
      {set $spotlightcustomtexture TRUE}
      {set $spotlight {$component selected_sym}}
      {ui goto_screen overshell_trk_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
         {ui goto_screen overshell_trk_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   UIScreen
   overshell_spotlight_screen
   (panels overshell_spotlight_panel)
   (focus overshell_spotlight_panel)}
;
{new
   UIPanel
   options_milo_panel
   (file
      "options/options_audio.milo")
   (focus background_music.btn)
   (load
      {content_mgr start_refresh}
      {content_loading_panel allowed_to_show TRUE})
   (finish_load
      {content_loading_panel allowed_to_show FALSE})
   (is_loaded
      {content_mgr refresh_done})
   (enter
	  {background.sld set_num_steps 41} ;number of steps for note speed slider
      {crowd.sld set_num_steps 31} ;number of steps for song speed slider
      {sfx.sld set_num_steps 60} ;number of steps for venue fps slider
	  {background.sld set_current {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.05}}}} ;set note speed slider based on current value
      {crowd.sld set_current {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}} ;set song speed slider based on current value
      ;#ifdef HX_WII
      {$this disable sfx.sld}
      {sfx.sld set_showing FALSE}
      ;#else
      ;{sfx.sld set_current {int {- $emulatefps 1}}} ;set FPS slider based on current value
      ;#endif
	  {background_music.btn set text_token {sprintf {localize trackspeed_msg} {int {+ 0.5 {* $trackspeed 100}}}}} ;set note speed msg
	  {crowd.btn set text_token {sprintf {localize speed_msg} {int {+ 0.5 {* $speedmod 100}}}}} ;set song speed msg
      ;#ifdef HX_WII
      {$this disable sfx.btn}
      {sfx.btn set_showing FALSE}
      ;#else
	  ;{sfx.btn set text_token {sprintf {localize fps_msg} {int $emulatefps}}}  ;set venue fps msg
      ;#endif
      {audio_options.lbl set text_token milosliderlbl}
      {karaoke.btn set_showing FALSE}
      {$this disable karaoke.btn}
	  {$this update_all_from_profile}
      {memcardmgr
         add_sink
         $this
         (save_load_all_complete_msg)})
   (exit
      {memcardmgr remove_sink $this save_load_all_complete_msg})
   (save_load_all_complete_msg
      {$this update_all_from_profile})
   (TRANSITION_COMPLETE_MSG
      {$this
         update_helpbar
         {$this focus_name}}
      kDataUnhandled)
   (FOCUS_MSG
      {$this update_helpbar $new_focus})
   (SCROLL_SELECT_MSG
      {$this on_slider_change $component})
   (SCROLL_MSG
      {$this on_slider_change $component})
   (SELECT_MSG
      {switch
         $component
         (background_music.btn
            {background.sld store}
            {$this set_focus background.sld})
         (crowd.btn
            {crowd.sld store}
            {$this set_focus crowd.sld})
         (sfx.btn
            {sfx.sld store}
            {$this set_focus sfx.sld})})
   (BUTTON_DOWN_MSG
      {switch
         {$this focus_name}
         (background.sld
            {switch
               $action
               (kAction_Confirm
                  {background.sld confirm}
                  {play_instr_sfx $user button_select}
                  {$this set_focus background_music.btn})
               (kAction_Cancel
                  {background.sld undo $user}
                  {$this set_focus background_music.btn})
               kDataUnhandled})
         (crowd.sld
            {switch
               $action
               (kAction_Confirm
                  {crowd.sld confirm}
                  {play_instr_sfx $user button_select}
                  {$this set_focus crowd.btn})
               (kAction_Cancel
                  {crowd.sld undo $user}
                  {$this set_focus crowd.btn})
               kDataUnhandled})
         (sfx.sld
            {switch
               $action
               (kAction_Confirm
                  {sfx.sld confirm}
                  {play_instr_sfx $user button_select}
                  {$this set_focus sfx.btn})
               (kAction_Cancel
                  {sfx.sld undo $user}
                  {$this set_focus sfx.btn})
               kDataUnhandled})
         {if_else {== $action kAction_Cancel}
			{ui pop_screen}
			kDataUnhandled}})
   (on_slider_change
      ($component)
      {switch
         $component
         (background.sld
            {do {set $component current}}
            {$this set_speeds})
         (crowd.sld
            {do {set $component current}}
            {$this set_speeds})
         (sfx.sld
            {do {set $component current}}
            {$this set_speeds})})
   (update_all_from_profile
      {$this
         iterate
         UISlider
         $s
         {$this update_from_profile $s}})
   (update_from_profile
      ($component)
      {switch
         $component
         (background.sld
            {$component
               set_current
               {int {+ 0.5 {/ {+ {- $trackspeed 1} 0.5} 0.05}}}})
         (crowd.sld
            {$component
               set_current
               {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}})
         (sfx.sld
            {$component
               set_current
               {int {- $emulatefps 1}}})})
	(set_speeds
         {do
            {set $trackspeed {- {+ 1 {* {background.sld current} 0.05}} 0.5}}
            {set $speedmod
               {+ 1 {* {crowd.sld current} 0.05}}}
            {set $emulatefps
               {+ 1 {sfx.sld current}}}
         {set $leaderspeed $speedmod}}
         {set $leaderspeed $speedmod}
         {$this display_trackspeed_msg $trackspeed}
         {$this display_speed_msg $speedmod}
         {$this display_fps_msg $emulatefps})
   (display_trackspeed_msg
      ($tspd)
      {background_music.btn set text_token {sprintf {localize trackspeed_msg} {int {+ 0.5 {* $tspd 100}}}}})
   (display_speed_msg
      ($mspd)
     {crowd.btn set text_token {sprintf {localize speed_msg} {int {+ 0.5 {* $mspd 100}}}}})
   (display_fps_msg
      ($fps)
     {sfx.btn set text_token {sprintf {localize fps_msg} {int $fps}}}) ;don't add 1 here because this is being fed the actual fps
   (update_helpbar
      ($new_focus)
      {switch
         $new_focus
         ((background_music.btn crowd.btn sfx.btn voicechat.btn)
            {helpbar
               set_config
               ((cancel helpbar_back)
                  (confirm helpbar_changesetting))})
         ((background.sld crowd.sld sfx.sld voicechat.sld)
            {helpbar
               set_config
               ((cancel helpbar_cancel)
                  (confirm helpbar_confirmsetting))})})}
{new
   UIScreen
   options_milo_screen
   (panels meta background_panel main_popup_bg_panel options_milo_panel)
   (focus options_milo_panel)
   (back overshell_main_screen)
   (helpbar
      (helpbar_back helpbar_select))}
;
;

#define CNT_MODIFIER_DATA
((
   os_remap_cnt
   #ifndef HX_WII
   os_force_inst_detec
   #endif
   {if_else $padtar os_padtar1 os_padtar0}
   {if_else $paddrum os_paddrum1 os_paddrum0}
   {if_else $secondkick os_secondkick1 os_secondkick0}
   os_blnk
))
{new
   MultiSelectListPanel
   overshell_cnt_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_cnt}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_remap_cnt
            {ui push_screen overshell_remap_cnt_screen}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
         )
         (os_force_inst_detec
            {ui push_screen overshell_force_inst_detec_screen}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
         )
         (os_padtar1
            {set $padtar {! $padtar}}
            {set $paddrum FALSE}
            #ifdef HX_WII
            {set_cnt_type wii_remote kControllerVocals}
            #endif
            #ifdef HX_PS3
            {set_cnt_type dualshock kControllerVocals}
            #endif
            {set_cnt_type analog kControllerVocals}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_padtar0
            {set $padtar {! $padtar}}
            {set $paddrum FALSE}
            #ifdef HX_WII
            {set_cnt_type wii_remote kControllerGuitar}
            #endif
            #ifdef HX_PS3
            {set_cnt_type dualshock kControllerGuitar}
            #endif
            {set_cnt_type analog kControllerGuitar}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_paddrum1
            {set $paddrum {! $paddrum}}
            {set $padtar FALSE}
            #ifdef HX_WII
            {set_cnt_type wii_remote kControllerVocals}
            #endif
            #ifdef HX_PS3
            {set_cnt_type dualshock kControllerVocals}
            #endif
            {set_cnt_type analog kControllerVocals}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_paddrum0
            {set $paddrum {! $paddrum}}
            {set $padtar FALSE}
            #ifdef HX_WII
            {set_cnt_type wii_remote kControllerDrum}
            #endif
            #ifdef HX_PS3
            {set_cnt_type dualshock kControllerDrum}
            #endif
            {set_cnt_type analog kControllerDrum}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_secondkick1
            {set $secondkick {! $secondkick}}
            {disable_second_kick_mapping}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
         (os_secondkick0
            {set $secondkick {! $secondkick}}
            {enable_second_kick_mapping}
            {set $cntmodifierpos {sel_section.lst selected_sym}}
            {$this lst_reset}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data CNT_MODIFIER_DATA}
   {if $cntmodifierpos
      {sel_section.lst set_selected $cntmodifierpos}
   })
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}
         {set $cntmodifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_cnt_screen
   (panels overshell_cnt_panel)
   (focus overshell_cnt_panel)}
;
#ifdef HX_WII
;#define CNT_BUTTONS_MODIFIER_DATA
;((
;   kPad_X kPad_Circle kPad_Square kPad_Tri kPad_DUp kPad_DDown kPad_DLeft kPad_DRight kPad_Select
;))
#define CNT_BUTTONS_MODIFIER_DATA ;the game crashes when trying to localize macros so we have to do it this stupid way
((
   os_pad_x os_pad_circle os_pad_square os_pad_tri os_pad_dup os_pad_ddown os_pad_dleft os_pad_dright os_pad_select
))
#else
;#define CNT_BUTTONS_MODIFIER_DATA
;((
;   kPad_L2 kPad_L1 kPad_R1 kPad_R2 kPad_X kPad_Circle kPad_Square kPad_Tri kPad_DUp kPad_DDown kPad_DLeft kPad_DRight kPad_L3 kPad_R3 kPad_Select
;))
#define CNT_BUTTONS_MODIFIER_DATA
((
   os_pad_l2 os_pad_l1 os_pad_r1 os_pad_r2 os_pad_x os_pad_circle os_pad_square os_pad_tri os_pad_dup os_pad_ddown os_pad_dleft os_pad_dright os_pad_l3 os_pad_r3 os_pad_select
))
#endif
#define CNT_MAP_LEAVE
(
   {ui goto_screen overshell_remap_cnt_screen}
   {ui pop_screen}
)
{new
   MultiSelectListPanel
   overshell_remap_cnt_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_remap_cnt}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_reset_gem
            #ifdef HX_WII
            {set $cnt_slot1 kPad_Circle}
            {set $cnt_slot2 kPad_DRight}
            {set $cnt_slot3 kPad_X}
            {set $cnt_slot4 kPad_Square}
            {set $cnt_slot5 kPad_Tri}
            {set $cnt_star kPad_DLeft}
            #else
            {set $cnt_slot1 kPad_L2}
            {set $cnt_slot2 kPad_L1}
            {set $cnt_slot3 kPad_R1}
            {set $cnt_slot4 kPad_R2}
            {set $cnt_slot5 kPad_X}
            {set $cnt_star kPad_Select}
            #endif
         )
         (os_gtr_gems_1
            {ui push_screen overshell_cnt_slot_1_screen}
            {set $rcntmodifierpos {sel_section.lst selected_sym}}
         )
         (os_gtr_gems_2
            {ui push_screen overshell_cnt_slot_2_screen}
            {set $rcntmodifierpos {sel_section.lst selected_sym}}
         )
         (os_gtr_gems_3
            {ui push_screen overshell_cnt_slot_3_screen}
            {set $rcntmodifierpos {sel_section.lst selected_sym}}
         )
         (os_gtr_gems_4
            {ui push_screen overshell_cnt_slot_4_screen}
            {set $rcntmodifierpos {sel_section.lst selected_sym}}
         )
         (os_gtr_gems_5
            {ui push_screen overshell_cnt_slot_5_screen}
            {set $rcntmodifierpos {sel_section.lst selected_sym}}
         )
         (os_spotlight
            {ui push_screen overshell_cnt_star_screen}
            {set $rcntmodifierpos {sel_section.lst selected_sym}}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data (os_reset_gem os_gtr_gems_1 os_gtr_gems_2 os_gtr_gems_3 os_gtr_gems_4 os_gtr_gems_5 os_spotlight)}
   {if $rcntmodifierpos
      {sel_section.lst set_selected $rcntmodifierpos}
   })
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {set_cnt_mapping}
         {ui goto_screen overshell_cnt_screen}
         {ui pop_screen}
         {set $rcntmodifierpos 0}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_remap_cnt_screen
   (panels overshell_remap_cnt_panel)
   (focus overshell_remap_cnt_panel)}
;
{new
   MultiSelectListPanel
   overshell_cnt_slot_1_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_1}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad_l2
            {set $cnt_slot1 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_l1
            {set $cnt_slot1 kPad_L1}
            CNT_MAP_LEAVE
         )
         (os_pad_r1
            {set $cnt_slot1 kPad_R1}
            CNT_MAP_LEAVE
         )
         (os_pad_r2
            {set $cnt_slot1 kPad_R2}
            CNT_MAP_LEAVE
         )
         (os_pad_x
            {set $cnt_slot1 kPad_X}
            CNT_MAP_LEAVE
         )
         (os_pad_circle
            {set $cnt_slot1 kPad_Circle}
            CNT_MAP_LEAVE
         )
         (os_pad_square
            {set $cnt_slot1 kPad_Square}
            CNT_MAP_LEAVE
         )
         (os_pad_tri
            {set $cnt_slot1 kPad_Tri}
            CNT_MAP_LEAVE
         )
         (os_pad_dup
            {set $cnt_slot1 kPad_DUp}
            CNT_MAP_LEAVE
         )
         (os_pad_ddown
            {set $cnt_slot1 kPad_DDown}
            CNT_MAP_LEAVE
         )
         (os_pad_dleft
            {set $cnt_slot1 kPad_DLeft}
            CNT_MAP_LEAVE
         )
         (os_pad_dright
            {set $cnt_slot1 kPad_DRight}
            CNT_MAP_LEAVE
         )
         (os_pad_l3
            {set $cnt_slot1 kPad_L3}
            CNT_MAP_LEAVE
         )
         (os_pad_r3
            {set $cnt_slot1 kPad_R3}
            CNT_MAP_LEAVE
         )
         (os_pad_select
            {set $cnt_slot1 kPad_Select}
            CNT_MAP_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data CNT_BUTTONS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         CNT_MAP_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_cnt_slot_1_screen
   (panels overshell_cnt_slot_1_panel)
   (focus overshell_cnt_slot_1_panel)}
;
;
{new
   MultiSelectListPanel
   overshell_cnt_slot_2_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_2}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad_l2
            {set $cnt_slot2 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_l1
            {set $cnt_slot2 kPad_L1}
            CNT_MAP_LEAVE
         )
         (os_pad_r1
            {set $cnt_slot2 kPad_R1}
            CNT_MAP_LEAVE
         )
         (os_pad_r2
            {set $cnt_slot2 kPad_R2}
            CNT_MAP_LEAVE
         )
         (os_pad_x
            {set $cnt_slot2 kPad_X}
            CNT_MAP_LEAVE
         )
         (os_pad_l2
            {set $cnt_slot2 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_circle
            {set $cnt_slot2 kPad_Circle}
            CNT_MAP_LEAVE
         )
         (os_pad_square
            {set $cnt_slot2 kPad_Square}
            CNT_MAP_LEAVE
         )
         (os_pad_tri
            {set $cnt_slot2 kPad_Tri}
            CNT_MAP_LEAVE
         )
         (os_pad_dup
            {set $cnt_slot2 kPad_DUp}
            CNT_MAP_LEAVE
         )
         (os_pad_ddown
            {set $cnt_slot2 kPad_DDown}
            CNT_MAP_LEAVE
         )
         (os_pad_dleft
            {set $cnt_slot2 kPad_DLeft}
            CNT_MAP_LEAVE
         )
         (os_pad_dright
            {set $cnt_slot2 kPad_DRight}
            CNT_MAP_LEAVE
         )
         (os_pad_l3
            {set $cnt_slot2 kPad_L3}
            CNT_MAP_LEAVE
         )
         (os_pad_r3
            {set $cnt_slot2 kPad_R3}
            CNT_MAP_LEAVE
         )
         (os_pad_select
            {set $cnt_slot2 kPad_Select}
            CNT_MAP_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data CNT_BUTTONS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         CNT_MAP_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_cnt_slot_2_screen
   (panels overshell_cnt_slot_2_panel)
   (focus overshell_cnt_slot_2_panel)}
;
;
{new
   MultiSelectListPanel
   overshell_cnt_slot_3_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_3}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad_l2
            {set $cnt_slot3 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_l1
            {set $cnt_slot3 kPad_L1}
            CNT_MAP_LEAVE
         )
         (os_pad_r1
            {set $cnt_slot3 kPad_R1}
            CNT_MAP_LEAVE
         )
         (os_pad_r2
            {set $cnt_slot3 kPad_R2}
            CNT_MAP_LEAVE
         )
         (os_pad_x
            {set $cnt_slot3 kPad_X}
            CNT_MAP_LEAVE
         )
         (os_pad_l2
            {set $cnt_slot3 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_circle
            {set $cnt_slot3 kPad_Circle}
            CNT_MAP_LEAVE
         )
         (os_pad_square
            {set $cnt_slot3 kPad_Square}
            CNT_MAP_LEAVE
         )
         (os_pad_tri
            {set $cnt_slot3 kPad_Tri}
            CNT_MAP_LEAVE
         )
         (os_pad_dup
            {set $cnt_slot3 kPad_DUp}
            CNT_MAP_LEAVE
         )
         (os_pad_ddown
            {set $cnt_slot3 kPad_DDown}
            CNT_MAP_LEAVE
         )
         (os_pad_dleft
            {set $cnt_slot3 kPad_DLeft}
            CNT_MAP_LEAVE
         )
         (os_pad_dright
            {set $cnt_slot3 kPad_DRight}
            CNT_MAP_LEAVE
         )
         (os_pad_l3
            {set $cnt_slot3 kPad_L3}
            CNT_MAP_LEAVE
         )
         (os_pad_r3
            {set $cnt_slot3 kPad_R3}
            CNT_MAP_LEAVE
         )
         (os_pad_select
            {set $cnt_slot3 kPad_Select}
            CNT_MAP_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data CNT_BUTTONS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         CNT_MAP_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_cnt_slot_3_screen
   (panels overshell_cnt_slot_3_panel)
   (focus overshell_cnt_slot_3_panel)}
;
;
{new
   MultiSelectListPanel
   overshell_cnt_slot_4_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_4}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad_l2
            {set $cnt_slot4 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_l1
            {set $cnt_slot4 kPad_L1}
            CNT_MAP_LEAVE
         )
         (os_pad_r1
            {set $cnt_slot4 kPad_R1}
            CNT_MAP_LEAVE
         )
         (os_pad_r2
            {set $cnt_slot4 kPad_R2}
            CNT_MAP_LEAVE
         )
         (os_pad_x
            {set $cnt_slot4 kPad_X}
            CNT_MAP_LEAVE
         )
         (os_pad_l2
            {set $cnt_slot4 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_circle
            {set $cnt_slot4 kPad_Circle}
            CNT_MAP_LEAVE
         )
         (os_pad_square
            {set $cnt_slot4 kPad_Square}
            CNT_MAP_LEAVE
         )
         (os_pad_tri
            {set $cnt_slot4 kPad_Tri}
            CNT_MAP_LEAVE
         )
         (os_pad_dup
            {set $cnt_slot4 kPad_DUp}
            CNT_MAP_LEAVE
         )
         (os_pad_ddown
            {set $cnt_slot4 kPad_DDown}
            CNT_MAP_LEAVE
         )
         (os_pad_dleft
            {set $cnt_slot4 kPad_DLeft}
            CNT_MAP_LEAVE
         )
         (os_pad_dright
            {set $cnt_slot4 kPad_DRight}
            CNT_MAP_LEAVE
         )
         (os_pad_l3
            {set $cnt_slot4 kPad_L3}
            CNT_MAP_LEAVE
         )
         (os_pad_r3
            {set $cnt_slot4 kPad_R3}
            CNT_MAP_LEAVE
         )
         (os_pad_select
            {set $cnt_slot4 kPad_Select}
            CNT_MAP_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data CNT_BUTTONS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         CNT_MAP_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_cnt_slot_4_screen
   (panels overshell_cnt_slot_4_panel)
   (focus overshell_cnt_slot_4_panel)}
;
;
{new
   MultiSelectListPanel
   overshell_cnt_slot_5_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_gtr_gems_5}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad_l2
            {set $cnt_slot5 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_l1
            {set $cnt_slot5 kPad_L1}
            CNT_MAP_LEAVE
         )
         (os_pad_r1
            {set $cnt_slot5 kPad_R1}
            CNT_MAP_LEAVE
         )
         (os_pad_r2
            {set $cnt_slot5 kPad_R2}
            CNT_MAP_LEAVE
         )
         (os_pad_x
            {set $cnt_slot5 kPad_X}
            CNT_MAP_LEAVE
         )
         (os_pad_l2
            {set $cnt_slot5 kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_circle
            {set $cnt_slot5 kPad_Circle}
            CNT_MAP_LEAVE
         )
         (os_pad_square
            {set $cnt_slot5 kPad_Square}
            CNT_MAP_LEAVE
         )
         (os_pad_tri
            {set $cnt_slot5 kPad_Tri}
            CNT_MAP_LEAVE
         )
         (os_pad_dup
            {set $cnt_slot5 kPad_DUp}
            CNT_MAP_LEAVE
         )
         (os_pad_ddown
            {set $cnt_slot5 kPad_DDown}
            CNT_MAP_LEAVE
         )
         (os_pad_dleft
            {set $cnt_slot5 kPad_DLeft}
            CNT_MAP_LEAVE
         )
         (os_pad_dright
            {set $cnt_slot5 kPad_DRight}
            CNT_MAP_LEAVE
         )
         (os_pad_l3
            {set $cnt_slot5 kPad_L3}
            CNT_MAP_LEAVE
         )
         (os_pad_r3
            {set $cnt_slot5 kPad_R3}
            CNT_MAP_LEAVE
         )
         (os_pad_select
            {set $cnt_slot5 kPad_Select}
            CNT_MAP_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data CNT_BUTTONS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         CNT_MAP_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_cnt_slot_5_screen
   (panels overshell_cnt_slot_5_panel)
   (focus overshell_cnt_slot_5_panel)}
;
;
{new
   MultiSelectListPanel
   overshell_cnt_star_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_spotlight}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (os_pad_l2
            {set $cnt_star kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_l1
            {set $cnt_star kPad_L1}
            CNT_MAP_LEAVE
         )
         (os_pad_r1
            {set $cnt_star kPad_R1}
            CNT_MAP_LEAVE
         )
         (os_pad_r2
            {set $cnt_star kPad_R2}
            CNT_MAP_LEAVE
         )
         (os_pad_x
            {set $cnt_star kPad_X}
            CNT_MAP_LEAVE
         )
         (os_pad_l2
            {set $cnt_star kPad_L2}
            CNT_MAP_LEAVE
         )
         (os_pad_circle
            {set $cnt_star kPad_Circle}
            CNT_MAP_LEAVE
         )
         (os_pad_square
            {set $cnt_star kPad_Square}
            CNT_MAP_LEAVE
         )
         (os_pad_tri
            {set $cnt_star kPad_Tri}
            CNT_MAP_LEAVE
         )
         (os_pad_dup
            {set $cnt_star kPad_DUp}
            CNT_MAP_LEAVE
         )
         (os_pad_ddown
            {set $cnt_star kPad_DDown}
            CNT_MAP_LEAVE
         )
         (os_pad_dleft
            {set $cnt_star kPad_DLeft}
            CNT_MAP_LEAVE
         )
         (os_pad_dright
            {set $cnt_star kPad_DRight}
            CNT_MAP_LEAVE
         )
         (os_pad_l3
            {set $cnt_star kPad_L3}
            CNT_MAP_LEAVE
         )
         (os_pad_r3
            {set $cnt_star kPad_R3}
            CNT_MAP_LEAVE
         )
         (os_pad_select
            {set $cnt_star kPad_Select}
            CNT_MAP_LEAVE
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data CNT_BUTTONS_MODIFIER_DATA})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         CNT_MAP_LEAVE
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_cnt_star_screen
   (panels overshell_cnt_star_panel)
   (focus overshell_cnt_star_panel)}
;
;
{new
   MultiSelectListPanel
   overshell_force_inst_detec_panel
   OVERSHELL_LIST_FILE
   (enter
      {$this lst_reset}
      {title.lbl set text_token {localize os_force_inst_detec}}
      {$this pause_if_local})
   (exit)
   (SELECT_MSG
      {switch {$component selected_sym}
         (info
            {ui push_screen force_instrument_info_screen}
         )
         (off
            {set $force_inst_detec FALSE}
            {force_inst_detection}
            {ui goto_screen overshell_cnt_screen}
            {ui pop_screen}
         )
         (guitar
            {set $force_inst_detec guitar}
            {force_inst_detection}
            {ui goto_screen overshell_cnt_screen}
            {ui pop_screen}
         )
         (gh_guitar
            {set $force_inst_detec gh_guitar}
            {force_inst_detection}
            {ui goto_screen overshell_cnt_screen}
            {ui pop_screen}
         )
         (drum
            {set $force_inst_detec drum}
            {force_inst_detection}
            {ui goto_screen overshell_cnt_screen}
            {ui pop_screen}
         )
      }
   )
   (lst_reset
      {sel_section.lst set_data (info off guitar #ifdef HX_PS3 gh_guitar #endif drum os_blnk)})
   (SCROLL_MSG)
   (BUTTON_DOWN_MSG
      {if {== $action kAction_Cancel}
         {ui goto_screen overshell_force_inst_detec}
         {ui pop_screen}
      }
      kDataUnhandled
      )}
{new
   UIScreen
   overshell_force_inst_detec_screen
   (panels overshell_force_inst_detec_panel)
   (focus overshell_force_inst_detec_panel)}
;