#define TRACK_END_FRAME
(1920)
;#ifndef HX_XBOX
(new Object fc_bass_callback ;remove FC groove on bass miss/pass
   (hit
      {if {! $bass_firstnote} {set $bass_firstnote TRUE}}
	  {if {! $bass_milosong} {set $bass_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
      {$this check_fc}
      {set [num_gems_hit] {'+' [num_gems_hit] 1}}
      {set [num_gems_combo] {'+' [num_gems_combo] 1}}
	  )
   (miss
      {unless {! $bass_firstnote}
	  {set [num_gems_miss] {'+' [num_gems_miss] 1}}
	  {set [num_gems_combo] 0}
      {$this check_missed}
	  {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}
      {bass stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}}
	  )
   (pass
      {if {! $bass_firstnote} {set $bass_firstnote TRUE}}
	  {if {! $bass_milosong} {set $bass_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
	  {set [num_gems_pass] {'+' [num_gems_pass] 1}}
	  {set [num_gems_combo] 0}
      {$this check_missed}
	  {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}
      {bass stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}
	  )
   (check_fc
      {$this check_missed}
      {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
        {{{{get_track_panel} find bass} find streak_meter} star_deploy}
        {bass deploy}}
	  )
   (check_missed
	  {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
      {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}
      {bass stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}}
	  )
   (num_gems_hit 0)
   (num_gems_combo 0)
   (num_gems_miss 0)
   (num_gems_pass 0)
)

(new Object fc_guitar_callback ;remove FC groove on guitar miss/pass
   (hit
      {if {! $guitar_firstnote} {set $guitar_firstnote TRUE}}
	  {if {! $guitar_milosong} {set $guitar_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
      {$this check_fc}
      {set [num_gems_hit] {'+' [num_gems_hit] 1}}
      {set [num_gems_combo] {'+' [num_gems_combo] 1}}
      ;was gated in online modes because of some bug, maybe it not deactivating when a non local would miss? anyways will likely need to change back but it could be fine
      {unless $legacybass {if {&& {> [num_gems_combo] 29} {! $guitar_groove_active}} {set $guitar_groove_active TRUE} {{{{get_track_panel} find guitar} find BassSuperStreak_ON.trig} trigger}}}
	  )
   (miss
      {unless {! $guitar_firstnote}
	  {set [num_gems_miss] {'+' [num_gems_miss] 1}}
	  {set [num_gems_combo] 0}
      {$this check_missed}
	  {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}
      {guitar stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}}
	  )
   (pass
      {if {! $guitar_firstnote} {set $guitar_firstnote TRUE}}
	  {if {! $guitar_milosong} {set $guitar_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
	  {set [num_gems_pass] {'+' [num_gems_pass] 1}}
	  {set [num_gems_combo] 0}
      {$this check_missed}
	  {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}
      {guitar stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}
	  )
   (check_fc
      {$this check_missed}
      {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
        {{{{get_track_panel} find guitar} find streak_meter} star_deploy}
        {guitar deploy}}
	  )
   (check_missed
	  {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
      {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}
      {guitar stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}}
      {unless $legacybass {if {< [num_gems_combo] 29} {set $guitar_groove_active FALSE} {{{{get_track_panel} find guitar} find BassSuperStreak_OFF.trig} trigger}}}
	  )
   (num_gems_hit 0)
   (num_gems_combo 0)
   (num_gems_miss 0)
   (num_gems_pass 0)
)

(new Object fc_drum_callback ;remove FC groove on drum miss/pass
   (hit
      {if {! $drum_firstnote} {set $drum_firstnote TRUE}}
	  {if {! $drum_milosong} {set $drum_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
      {$this check_fc}
      {set [num_gems_hit] {'+' [num_gems_hit] 1}}
      {set [num_gems_combo] {'+' [num_gems_combo] 1}}
      {unless $legacybass  {if {&& {> [num_gems_combo] 29} {! $drum_groove_active}} {set $drum_groove_active TRUE} {{{{get_track_panel} find drum} find BassSuperStreak_ON.trig} trigger}}}
	  )
   (miss
      {unless {! $drum_firstnote}
	  {set [num_gems_miss] {'+' [num_gems_miss] 1}}
	  {set [num_gems_combo] 0}
      {$this check_missed}
	  {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}
      {drum stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}}
	  )
   (pass
      {if {! $drum_firstnote} {set $drum_firstnote TRUE}}
	  {if {! $drum_milosong} {set $drum_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
	  {set [num_gems_pass] {'+' [num_gems_pass] 1}}
	  {set [num_gems_combo] 0}
      {$this check_missed}
	  {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}
      {drum stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}
	  )
   (check_fc
      {$this check_missed}
      {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
        {{{{get_track_panel} find drum} find streak_meter} star_deploy}
        {drum deploy}}
	  )
   (check_missed
	  {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
      {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}
      {drum stop_deploy}
      {{{{gamemode get track_panel} loaded_dir} find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}}
      {unless $legacybass {if {< [num_gems_combo] 29} {set $drum_groove_active FALSE} {{{{get_track_panel} find drum} find BassSuperStreak_OFF.trig} trigger}}}
	  )
   (num_gems_hit 0)
   (num_gems_combo 0)
   (num_gems_miss 0)
   (num_gems_pass 0)
)
;#endif
#define TRACK_PANEL_HANDLERS
((enter
      {game add_sink $this}
      {{{gamemode get track_panel} loaded_dir} set view_time_easy {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed} $speedmod}} ;implement track speed modifier
      {{{gamemode get track_panel} loaded_dir} set view_time_expert {* {/ 1.2 $trackspeed} $speedmod}}
      {$this
         set_showing
         {'||'
            $skip_intro
            {gamemode in_mode drum_trainer}
            {!
               {gamemode in_mode practice}}}}
      {do
         ($vocals 0)
         ($gems 0)
         ($tri_frame 0)
         {beatmatch
            foreach_active_player
            $player
            {if_else
               {==
                  {$player instrument}
                  vocals}
               {'++' $vocals}
               {'++' $gems}}}
         {if
            {'||'
               {&&
                  $vocals
                  {== $gems 1}}
               {&&
                  {== $vocals 0}
                  {>= $gems 2}}}
            {set
               $tri_frame
               {song_mgr
                  tri_frame
                  {meta_performer song}}}}
         {if
            {&&
               $vocals
               {>= $gems 2}}
            {set $tri_frame 1}}
         {rnd tri_frame $tri_frame}}
      #ifdef HX_WII
      {rnd frames_buffered 2}
      #endif)
   (exit
      #ifdef HX_WII
      {rnd frames_buffered 1}
      #endif
      {game remove_sink $this})
   (unison_hit)
   (unison_miss)
   (set_track_out)
   (set_track_in)
   (animate_track
      ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {$this
         set_showing
         {!
            {gamemode in_mode theatre}}}
      {$this set_track_out})
   (intro_start
      {$this track_reset}
      {$this
         set_showing
         {!
            {gamemode in_mode theatre}}}
      {$this set_track_in})
   (intro_skip
      {$this track_reset}
      {$this set_showing TRUE}
      {$this set_track_out}
      {if
         {&&
            {exists gamemode}
            {!
               {gamemode get is_tutorial}}}
         {$this play_intro}})
   (on_reset
      {beatmatch
         foreach_active_player
         $m
         {$m on_new_track}
         {{$m track}
            init
            {$m track}}}
      {{$this loaded_dir}
         reset})
   (on_extend
      #ifdef HX_WII
      {unless $wiisux
         {set $wiisux TRUE}
         {{$this find proj9_player_meter_bg.tex} set_bitmap "ui/track/textures/proj9_player_meter_bg.png"}
         {{$this find proj9_player_meter_lens.tex} set_bitmap "ui/track/textures/proj9_player_meter_lens.png"}
         {{$this find streak_meter_bg.tex} set_bitmap "ui/track/textures/streak_meter_bg_wii.png"}
         {{$this find streak_meter_vox_bg.tex} set_bitmap "ui/track/textures/streak_meter_vox_bg.png"}
      }
      #endif

     ;#ifndef HX_XBOX
     {unless {gamemode in_mode h2h}
         {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
             {switch {$player instrument}
                (bass {$player add_sink fc_bass_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
                (guitar {$player add_sink fc_guitar_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
                (drum {$player add_sink fc_drum_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})}}}
     ;#endif

      {if {gamemode in_mode autoplay_mode}
         {set $wasjustlooking TRUE}
         {{$this find star_awarded.tex} set_bitmap "ui/track/textures/star_awarded_ap.png"}
         {{$this find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate.png"}
      }

      {unless {gamemode in_mode autoplay_mode}
         {if $wasjustlooking
            {set $wasjustlooking FALSE}
            {{$this find star_awarded.tex} set_bitmap "ui/track/textures/star_awarded.png"}
         }
         {if_else $fcring
            {{$this find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_fc.png"}
            {{$this find streak_meter_plate.tex} set_bitmap "ui/track/textures/streak_meter_plate_bk.png"}
         }
      }

      {if $highwaycustomtexture
         {{$this find track_lanes.tex} set_bitmap {sprint "ui/track/highway/" $highway ".png"}}
      }
      
      {if $streakcustomtexture
         {{$this find bass_superstreak_pattern.tex} set_bitmap {sprint "ui/track/streak/" $streak ".png"}}
      }

      {if $spotlightcustomtexture
         {{$this find spotlight_bass_track.tex} set_bitmap {sprint "ui/track/spotlight/" $spotlight ".png"}}
         {{$this find spotlight_guitar_track.tex} set_bitmap {sprint "ui/track/spotlight/" $spotlight ".png"}}
         {{$this find spotlight_drums_track.tex} set_bitmap {sprint "ui/track/spotlight/" $spotlight ".png"}}
      }
      ;after all of the queued texture updates are completed, set them to false so they do not run again until a new texture is queued via overshell
      {set $highwaycustomtexture FALSE}
      {set $streakcustomtexture FALSE}
      {set $spotlightcustomtexture FALSE}

      {set $outro_ran FALSE}

      {$this play_intro}
      {if
         {&&
            {exists gamemode}
            {gamemode get play_track_intro_sfx}}
         {synth play track_beg.cue}}
      {if_else
         {== {gamemode in_mode} practice}
         {do
            {unless {> {gamecfg get practice_speed} 0} {beatmatch set_music_speed $speedmod}}
            {if {> {gamecfg get practice_speed} 0} {beatmatch set_music_speed $modifier}}
         }
         {beatmatch set_music_speed $speedmod}
      }))
{new
   TrackPanel
   coop_track_panel
   (file
      "track/trackpanel.milo")
   TRACK_PANEL_HANDLERS}
{new
   TrackPanel
   h2h_track_panel
   (file
      "track/trackpanel_h2h.milo")
   TRACK_PANEL_HANDLERS}
{func
   get_track_panel
   {gamemode get track_panel}}
{set
   $playback_file
   ""}
